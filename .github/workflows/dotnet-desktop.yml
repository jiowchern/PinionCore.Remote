name: Build

on:
  push:
    branches:
      - master
      - release
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - 'docs/**'

jobs:
  build:
    if: github.ref == 'refs/heads/master'
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: |        
        dotnet test /p:CollectCoverage=true  /p:CoverletOutput=../CoverageResults/ /p:MergeWith="../CoverageResults/coverage.json" /p:CoverletOutputFormat="lcov%2cjson" -m:1
        cp CoverageResults/coverage.info .
    - name: Coveralls GitHub Action
      uses: coverallsapp/github-action@master
      with:         
        github-token: '${{ secrets.GITHUB_TOKEN }}'
        path-to-lcov: coverage.info

  publish:
    if: github.ref == 'refs/heads/release'
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore    
    - name: Pack
      run: dotnet pack --configuration Release --output ./nupkgs
    - name: List Package Files
      run: dir ./nupkgs

    - name: Publish to NuGet
      shell: pwsh
      run: |
       Get-ChildItem -Path "./nupkgs/*.nupkg" | ForEach-Object {
        dotnet nuget push $_.FullName --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
       }
